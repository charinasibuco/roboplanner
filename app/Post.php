<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Auth;

class Post extends Model
{
    protected $table    = 'posts';
    protected $fillable = ['title', 'slug','contents','meta_title','meta_keywords','meta_description', 'status'];
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::updating(function($role){
            $role->logs()->attach(Auth::user()->id, ['module_name' => 'Post', 'log' => Auth::user()->first_name . ' ' . Auth::user()->last_name . ' is updating ' . $role->name]);
        });

        static::creating(function($role){
            $role->logs()->attach(Auth::user()->id, ['module_name' => 'Post', 'log' => Auth::user()->first_name . ' ' . Auth::user()->last_name . ' is creating ' . $role->name]);
        });

        static::deleting(function($role){
            $role->logs()->attach(Auth::user()->id, ['module_name' => 'Post', 'log' => Auth::user()->first_name . ' ' . Auth::user()->last_name . ' is deleting ' . $role->name]);
        });
    }

    public function Categories(){
        return $this->belongsToMany(Category::class);
    }

    public function hasCategory($category)
    {
        if(is_string($category)){
            return $this->categories->contains('slug', $category);
        }

        return !! $category->intersect($this->categories)->count();
    }

    public function CategoryPost()
    {
        return $this->hasMany(CategoryPost::class);
    }

    public function logs(){
        return $this->belongsToMany(User::class, 'logs', 'module_id')
            ->withTimestamps()
            ->latest('pivot_updated_at');
    }

    public function attachCategory($category){
        return $this->categories()->attach($category);
    }

    public function detachCategory($category){

        return $this->categories()->detach($category);

    }
}
